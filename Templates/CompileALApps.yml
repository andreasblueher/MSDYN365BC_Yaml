# File: CompileALApps.yml

steps:
- powershell: |
   Import-Module NVRAppDevOps -DisableNameChecking
   Import-Module navcontainerhelper -DisableNameChecking
   
   $Config = Get-Content (-join($env:ConfigFolder,"\config.json")) | ConvertFrom-JSON
   
   if ($CertPath) {
     Install-NAVSipCryptoProviderFromNavContainer -containerName $Config.ContainerName
   }
   
   # If changed apps haven't been defined simply set them to all apps
   if (-not $Config.ChangedApps) {
     $Config | Add-Member -MemberType NoteProperty -Name "ChangedApps" -Value $Config.AppCollection
   }
   
   $sortedApps = @()
   $scannedApp = @{}
   
   function getAppString($appJson) {
     return "$($appJson.publisher)_$($appJson.name)_$($appJson.version).app"
   }
   
   function checkApp($appJson) {
     #example dependency { "appId": "4805fd15-75a5-46a2-952f-39c1c4eab821", "name": "WeatherLibrary", "publisher": "Microsoft", "version": "1.0.0.0"}
     $apps.dependencies | % {
       if ($_.publisher -eq "Microsoft") {
         continue;
       }

       if ($Script:scannedApp.Contains((getAppString($_)))) {
         continue;
       } else {
         if (-not $_.dependencies) {
           $Script:sortedApps += $_;
           $Script:scannedAppApps.Add((getAppString($_)))
         } else {
           checkApp($_);
         }
       }
     }
   }

   $Config.ChangedApps | % {
     checkApp($_)
   }

   #$Config | Compile-ALProjectTree -OrderedApps (Get-ALBuildOrder $Config.AppCollection) -PackagesPath $Config.RepoPath
   
   $Config.AppCollection | % {
     copy-item -Path (Join-Path $Config.RepoPath '*.app') -Destination $env:Build_ArtifactStagingDirectory -Filter "*_$($_.AppName)_*.app"
     copy-item -Path (Join-Path $Config.RepoPath '*.app') -Destination $env:Build_ArtifactStagingDirectory -Filter "*_$($_.TestAppName)_*.app"
   }
   
  displayName: 'Compile AL Apps'
